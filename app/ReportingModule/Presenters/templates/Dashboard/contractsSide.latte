{block header_tmpl}
{/block}

{block pageHeading}
    <span class="text-secondary d-inline-block px-2">/</span>
    <a n:href=":Reporting:Dashboard:default, 'activeTab' => '00011'" class="text-white">SILON CZ</a>
    <span class="text-secondary d-inline-block px-2">/</span>
    {*{$reportConfig->name}*}
    Contracts
{/block}

{block header}
    <style>
        iframe {
            border: 0;
        }

        #left-report-nav .nav-link.active,
        #left-report-nav .nav-link:has(+ ul .nav-link.active) {
            background-color: var(--sil-primary-color);
            color: #fff;
        }

        #left-report-nav ul .nav-link.active {
            background-color: var(--sil-primary-light-color);
            color: #000;
        }

        #left-report-nav .nav-link {
            color: #000;
        }
    </style>
{/block}

{block content}
    {var $today = new DateTime()}
    <div class="row">
        <div class="col-2 bg-light pt-3">
            <ul id="left-report-nav" class="nav flex-column">
                <li class="nav-item">
                    <a class="nav-link" href="#" data-page="ReportSectioncce5b109d49fdbf042c3">
                        Contracts by Categories
                    </a>

                    <ul class="nav flex-column ms-3">
                        <li class="nav-item">
                            <a class="nav-link active" href="#" data-page="ReportSectioncce5b109d49fdbf042c3">
                                All Sales and Credit
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#" data-page="ced1608670a739039568">
                                Green Invoices
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#" data-page="7fd37f20db9de97abcba">
                                Credit Notes
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#" data-page="11e07b900880c0750790">
                                Quality
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#" data-page="a4a4db5030a10287b8c8">
                                Breakdown by SEG4
                            </a>
                        </li>
                    </ul>

                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#" data-page="34d63374b0d45b154e43">
                        Contracts by Customers
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#" data-page="36518aa9bc041582c699">
                        Contracts by Category and Customers
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#" data-page="9f8b8fce0de4d389d4d4">
                        Yield on waste
                    </a>
                </li>
                {*<li class="nav-item">
                    <a class="nav-link" href="#" data-page="6d1eec3c316fe78892b9">
                        Uk√°zka
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#" data-page="ReportSection0d902c295d2c8700dfae">
                        Contracts Detail
                    </a>
                </li>*}
            </ul>
        </div>
        <div class="col-10">
            <div id="report-container" class="with-sidebar"></div>
            {dump $reportConfig}
        </div>
    </div>


    <script src="{$basePath}/assets/js/powerbi.min.js"></script>
    <script>


        document.addEventListener("DOMContentLoaded", function() {
            console.log('ready');

            let models = window["powerbi-client"].models;
            let reportContainer = $("#report-container").get(0);

            // Initialize iframe for embedding report
            powerbi.bootstrap(reportContainer, { type: "report" });

            // Create a config object with type of the object, Embed details and Token Type
            let reportLoadConfig = {
                type: "report",
                tokenType: models.TokenType.Embed,
                accessToken: {$reportConfig->embedToken},

                // Use other embed report config based on the requirement. We have used the first one for demo purpose
                embedUrl: {$reportConfig->embedUrl},

                // Enable this setting to remove gray shoulders from embedded report
                // settings: {
                //     background: models.BackgroundType.Transparent
                // }

                settings: {
                    // https://learn.microsoft.com/en-us/javascript/api/overview/powerbi/configure-report-settings#configure-edit-mode
                    permissions: models.Permissions.Read,
                    viewMode: models.ViewMode.View,

                    panes: {
                        bookmarks: {
                            visible: false
                        },
                        fields: {
                            expanded: false
                        },
                        filters: {
                            expanded: false,
                            visible: false
                        },
                        pageNavigation: {
                            visible: false
                        },
                        selection: {
                            visible: false
                        },
                        syncSlicers: {
                            visible: false
                        },
                        visualizations: {
                            expanded: false
                        }
                    },
                    bars: {
                        actionBar: {
                            visible: true
                        },
                        statusBar: {
                            visible: true
                        }
                    },
                    localeSettings: {
                        language: "en-us"
                    },
                    hideErrors: false,

                    /*Initial page*/
                    //pageName: 'ReportSection3',

                    //filters: [...], // https://learn.microsoft.com/en-us/javascript/api/overview/powerbi/control-report-filters
                    //slicers: slicerArray, // https://learn.microsoft.com/en-us/javascript/api/overview/powerbi/control-report-slicers

                    // onload bookmark - https://learn.microsoft.com/en-us/javascript/api/overview/powerbi/configure-report-settings#on-load-bookmark
                }

            };

            // Use the token expiry to regenerate Embed token for seamless end user experience
            // Refer https://aka.ms/RefreshEmbedToken
            tokenExpiry = {$reportConfig->expiration};

            // Embed Power BI report when Access token and Embed URL are available
            let report = powerbi.embed(reportContainer, reportLoadConfig);

            // Clear any other loaded handler events
            report.off("loaded");

            // Triggers when a report schema is successfully loaded
            report.on("loaded", function () {
                console.log("Report load successful");
                /*report.getPages().then(function (pages) {
                    console.log(pages);
                });

                report.getSlicers().then(function(slicers) {
                    console.log(slicers);
                });

                report.getFilters().then(function(filters) {
                    console.log(filters);
                });*/

                const navigation = document.querySelectorAll("#left-report-nav .nav-link");
                console.log(navigation);
                navigation.forEach(function (link) {
                    link.addEventListener("click", function (e) {
                        e.preventDefault();
                        let page = e.target.getAttribute("data-page");
                        if(page) {
                            report.setPage(page);
                            // set all link to inactive
                            navigation.forEach(function (link) {
                                link.classList.remove("active");
                            });
                            // set clicked link to active
                            e.target.classList.add("active");
                        }
                    });
                });

            });

            // Clear any other rendered handler events
            report.off("rendered");

            // Triggers when a report is successfully embedded in UI
            report.on("rendered", function () {
                console.log("Report render successful");
            });

            // Clear any other error handler events
            report.off("error");

            // Handle embed errors
            report.on("error", function (event) {
                let errorMsg = event.detail;
                console.error(errorMsg);
                return;
            });


            /*document.getElementById("setPage-btn").addEventListener("click", function() {
                report.setPage("ReportSection49ce4843d47777a3548a");
            });*/


        });
    </script>
{/block}